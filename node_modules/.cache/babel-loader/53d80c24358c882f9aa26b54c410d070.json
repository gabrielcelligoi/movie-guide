{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport Slider from \"react-slick\";\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\nimport './upcoming.css'; // API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upcoming() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [imageIndex, setImageIndex] = useState(0);\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let nextMonth = date.getMonth() + 2;\n  let day = date.getDate(); //format date\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  if (nextMonth < 10) {\n    nextMonth = `0${nextMonth}`;\n  }\n\n  if (day < 10) {\n    day = `0${day}`;\n  }\n\n  const today = `${year}-${month}-${day}`;\n  const releaseLimit = `${year}-${nextMonth}-${day}`; //set carousel's arrows\n\n  const NextArrow = _ref => {\n    let {\n      onClick\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow next\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(BsChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n\n  const PrevArrow = _ref2 => {\n    let {\n      onClick\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow prev\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(BsChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }; // set a const to help with the carousel's responsiveness\n\n\n  const small = window.matchMedia(\"(max-width: 600px)\");\n  const settings = {\n    infinite: true,\n    lazyLoad: true,\n    speed: 300,\n    slidesToShow: 3,\n    centerMode: true,\n    centerPadding: 0,\n    nextArrow: /*#__PURE__*/_jsxDEV(NextArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this),\n    prevArrow: /*#__PURE__*/_jsxDEV(PrevArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this),\n    beforeChange: (current, next) => setImageIndex(next)\n  }; // if the const small is true, the carousel will show only one slide\n\n  if (small.matches) {\n    settings.slidesToShow = 1;\n  }\n\n  useEffect(() => {\n    async function loadMovies() {\n      await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page\n        }\n      }).then(response => {\n        // select only the movies with release date higher than today\n        let filteredMovies = response.data.results.filter(movie => movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\");\n        setMovies(prev => [...prev, ...filteredMovies]); //fetch 5 pages of data\n\n        if (page !== response.data.total_pages && page < 5) {\n          let sumPage = page + 1;\n          setPage(sumPage);\n        }\n      });\n    }\n\n    loadMovies();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upcoming-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upcoming-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Coming Soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: movies.map((movie, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: idx === imageIndex ? \"slide activeSlide\" : \"slide nonactive\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://image.tmdb.org//t/p/original/${movie.poster_path}`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upcoming, \"878kZQonRQSNWe7yOHr7XTNwDOc=\");\n\n_c = Upcoming;\nexport default Upcoming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upcoming\");","map":{"version":3,"names":["useEffect","useState","Link","api","Slider","BsChevronRight","BsChevronLeft","Upcoming","movies","setMovies","page","setPage","imageIndex","setImageIndex","date","Date","year","getFullYear","month","getMonth","nextMonth","day","getDate","today","releaseLimit","NextArrow","onClick","PrevArrow","small","window","matchMedia","settings","infinite","lazyLoad","speed","slidesToShow","centerMode","centerPadding","nextArrow","prevArrow","beforeChange","current","next","matches","loadMovies","get","params","api_key","then","response","filteredMovies","data","results","filter","movie","release_date","original_language","prev","total_pages","sumPage","map","idx","id","poster_path","title","overview"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport Slider from \"react-slick\";\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\"\n\nimport './upcoming.css';\n\n// API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nfunction Upcoming() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [imageIndex, setImageIndex] = useState(0);\n\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth()+1;\n  let nextMonth = date.getMonth()+2;\n  let day = date.getDate();\n\n  //format date\n  if(month < 10) {\n    month = `0${month}`;\n  }\n\n  if(nextMonth < 10) {\n    nextMonth = `0${nextMonth}`;\n  }\n\n  if(day < 10) {\n    day = `0${day}`\n  }\n\n  const today = `${year}-${month}-${day}`;\n  const releaseLimit = `${year}-${nextMonth}-${day}`;\n\n  //set carousel's arrows\n  const NextArrow = ({onClick}) => {\n    return (\n      <div className=\"arrow next\" onClick={onClick}>\n        <BsChevronRight />\n      </div>\n    )\n  }\n\n  const PrevArrow = ({onClick}) => {\n    return (\n      <div className=\"arrow prev\" onClick={onClick}>\n        <BsChevronLeft />\n      </div>\n    )\n  }\n  \n  // set a const to help with the carousel's responsiveness\n  const small = window.matchMedia(\"(max-width: 600px)\");\n\n  const settings = {\n    infinite:true,\n    lazyLoad: true,\n    speed: 300,\n    slidesToShow: 3,\n    centerMode: true,\n    centerPadding: 0,\n    nextArrow: <NextArrow/>,\n    prevArrow: <PrevArrow/>,\n    beforeChange: (current, next) => setImageIndex(next),\n  }\n\n  // if the const small is true, the carousel will show only one slide\n  if (small.matches) {\n    settings.slidesToShow = 1;\n  }\n\n  useEffect(()=> {\n    async function loadMovies(){\n      await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page,\n        }\n      })\n      .then((response) => {\n        // select only the movies with release date higher than today\n        let filteredMovies = response.data.results.filter(movie => \n          movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\"\n        )\n        setMovies(prev => [...prev, ...filteredMovies])\n\n        //fetch 5 pages of data\n        if (page !== response.data.total_pages && page < 5) {\n          let sumPage = page + 1;\n          setPage(sumPage);\n        }\n        \n      })\n    }\n\n    loadMovies();\n    \n  }, [page])\n\n  \n\n  return(\n    \n    \n    <div className=\"upcoming-list\">\n      <div className=\"upcoming-title\"><h2>Coming Soon</h2></div>\n      <Slider {...settings}>\n      {movies.map((movie, idx) => {\n          return(\n            <div key={movie.id} className={idx === imageIndex ? \"slide activeSlide\" : \"slide nonactive\"}>\n              <Link to={`/movie/${movie.id}`}>\n                <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n              </Link>\n              <strong>{movie.release_date}</strong>\n              <div className=\"description\">{movie.overview}</div>\n            </div>\n          )\n      })}\n      </Slider>\n    </div>\n    \n    \n  );\n}\n\nexport default Upcoming;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}