{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport './popular.css'; // API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upcoming() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let nextMonth = date.getMonth() + 2;\n  let day = date.getDate();\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  if (nextMonth < 10) {\n    nextMonth = `0${nextMonth}`;\n  }\n\n  if (day < 10) {\n    day = `0${day}`;\n  }\n\n  const today = `${year}-${month}-${day}`;\n  const releaseLimit = `${year}-${nextMonth}-${day}`;\n  useEffect(() => {\n    async function loadMovies() {\n      const response = await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page\n        }\n      }); //fetch 5 pages of data\n\n      if (page !== response.data.total_pages && page < 5) {\n        let sumPage = page + 1;\n        setPage(sumPage);\n      }\n\n      setMovies(prev => [...prev, ...response.data.results]);\n    }\n\n    loadMovies();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: movies.map(movie => {\n          if (movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/movie/${movie.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://image.tmdb.org//t/p/original/${movie.poster_path}`,\n                  alt: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: movie.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, movie.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upcoming, \"RJfgfaDMBCj2ygCE2JGhMDwoMvE=\");\n\n_c = Upcoming;\nexport default Upcoming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upcoming\");","map":{"version":3,"names":["useEffect","useState","Link","api","Upcoming","movies","setMovies","page","setPage","date","Date","year","getFullYear","month","getMonth","nextMonth","day","getDate","today","releaseLimit","loadMovies","response","get","params","api_key","data","total_pages","sumPage","prev","results","map","movie","release_date","original_language","id","poster_path","title"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport './popular.css';\n\n// API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nfunction Upcoming() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth()+1;\n  let nextMonth = date.getMonth()+2;\n  let day = date.getDate();\n\n  if(month < 10) {\n    month = `0${month}`;\n  }\n\n  if(nextMonth < 10) {\n    nextMonth = `0${nextMonth}`;\n  }\n\n  if(day < 10) {\n    day = `0${day}`\n  }\n\n  const today = `${year}-${month}-${day}`;\n  const releaseLimit = `${year}-${nextMonth}-${day}`;\n\n\n  useEffect(()=> {\n    async function loadMovies(){\n      const response = await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page,\n        }\n      })\n      \n      //fetch 5 pages of data\n      if (page !== response.data.total_pages && page < 5) {\n        let sumPage = page + 1;\n        setPage(sumPage);        \n      }\n\n      setMovies(prev => [...prev, ...response.data.results]);\n      \n    }\n\n    loadMovies();\n    \n  }, [page])\n\n \n\n  return(\n    <div className=\"container\">\n      <div className=\"header-container\">\n        <h2>Upcoming Movies</h2>\n      </div>\n\n      <div>\n        <div className=\"fade\"></div>\n        <div className=\"movies-list\">\n          {movies.map((movie) => {\n            if(movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\"){\n              return(\n                <div key={movie.id}>\n                  <Link to={`/movie/${movie.id}`}>\n                    <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n                  </Link>\n                  <strong>{movie.title}</strong>\n                  <strong>{movie.release_date}</strong>\n                </div>\n              )\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Upcoming;"],"mappings":"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"},"metadata":{},"sourceType":"module"}