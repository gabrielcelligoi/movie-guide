{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport api from \"../../services/api\"; // API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function loadMovies() {\n      const response = await api.get(\"movie/now_playing\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: 1\n        }\n      }); // console.log(response.data.results.slice(0, 10))\n      //using SLICE because the array returned from the API has a lot of movies. So I want to show only the first 10.\n\n      setMovies(response.data.results.slice(0, 10));\n    }\n\n    loadMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","api","Home","movies","setMovies","loadMovies","response","get","params","api_key","page","data","results","slice","map","movie","title","id"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\n\n// API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(()=> {\n    async function loadMovies(){\n      const response = await api.get(\"movie/now_playing\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: 1,\n        }\n      })\n      \n      // console.log(response.data.results.slice(0, 10))\n      //using SLICE because the array returned from the API has a lot of movies. So I want to show only the first 10.\n      setMovies(response.data.results.slice(0, 10));      \n\n    }\n\n    loadMovies();\n\n  }, [])\n\n  return(\n    <div className=\"container\">\n      <div className=\"movies-list\">\n        {movies.map((movie) => {\n          return(\n            <article key={movie.id}>\n              <strong>{movie.title}</strong>\n\n            </article>\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAEA;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EAEAD,SAAS,CAAC,MAAK;IACb,eAAeM,UAAf,GAA2B;MACzB,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,mBAAR,EAA6B;QAClDC,MAAM,EAAE;UACNC,OAAO,EAAE,kCADH;UAENC,IAAI,EAAE;QAFA;MAD0C,CAA7B,CAAvB,CADyB,CAQzB;MACA;;MACAN,SAAS,CAACE,QAAQ,CAACK,IAAT,CAAcC,OAAd,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,EAA/B,CAAD,CAAT;IAED;;IAEDR,UAAU;EAEX,CAjBQ,EAiBN,EAjBM,CAAT;EAmBA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MAAK,SAAS,EAAC,aAAf;MAAA,UACGF,MAAM,CAACW,GAAP,CAAYC,KAAD,IAAW;QACrB,oBACE;UAAA,uBACE;YAAA,UAASA,KAAK,CAACC;UAAf;YAAA;YAAA;YAAA;UAAA;QADF,GAAcD,KAAK,CAACE,EAApB;UAAA;UAAA;UAAA;QAAA,QADF;MAMD,CAPA;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GApCQf,I;;KAAAA,I;AAsCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}