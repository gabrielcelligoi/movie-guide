{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Movie/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Error from \"../Error\";\nimport api from \"../../services/api\";\nimport './movie.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function loadMovie() {\n      await api.get(`movie/${id}`, {\n        params: {\n          api_key: '1f6b33fb81a101dccbcc1b538423c585'\n        }\n      }).then(response => {\n        setMovie(response.data);\n        setLoading(false);\n      }).catch(() => {\n        setError(true);\n      });\n    }\n\n    loadMovie();\n    return () => {\n      console.log('component desassembled');\n    };\n  }, [id]);\n\n  function saveMovie() {\n    // take the list on localstorage and saves it on a variable\n    const myList = localStorage.getItem(\"@movieguide\"); // take the myList variable, convert it to an array (JSON.parse because it originaly is a string) and saves it to a variable named savedMovies. If the myList variable doesnt exist, it saves an empty array to savedMovies variable\n\n    let savedMovies = JSON.parse(myList) || []; // create a variable hasMovie. savedMovies.some will return true if savedMovie.id === movie.id\n\n    const hasMovie = savedMovies.some(savedMovie => savedMovie.id === movie.id);\n\n    if (hasMovie) {\n      return;\n    }\n\n    savedMovies.push(movie);\n    localStorage.setItem(\"@movieguide\", JSON.stringify(savedMovies));\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://image.tmdb.org//t/p/original/${movie.backdrop_path}`,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"Vote Average: \", movie.vote_average, \" / 10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveMovie,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"external\",\n          href: `http://youtube.com/results?search_query=${movie.title} Trailer`,\n          children: \"Trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movie, \"IFwKcYD9qaTx3YG50tnvrUwbW4M=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["useEffect","useState","useParams","Error","api","Movie","id","error","setError","movie","setMovie","loading","setLoading","loadMovie","get","params","api_key","then","response","data","catch","console","log","saveMovie","myList","localStorage","getItem","savedMovies","JSON","parse","hasMovie","some","savedMovie","push","setItem","stringify","title","backdrop_path","overview","vote_average"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Movie/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Error from \"../Error\";\n\nimport api from \"../../services/api\";\n\nimport './movie.css'\n\nfunction Movie() {\n  const { id } = useParams();\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    async function loadMovie() {\n      await api.get(`movie/${id}`, {\n        params: {\n          api_key: '1f6b33fb81a101dccbcc1b538423c585'\n        }\n      })\n      .then((response) => {        \n        setMovie(response.data);\n        setLoading(false);\n      })\n      .catch(() => {        \n        setError(true);\n      })\n    }\n\n    loadMovie();\n\n    return () => {\n      console.log('component desassembled')\n    }\n\n  }, [id]);\n\n  function saveMovie() {\n    // take the list on localstorage and saves it on a variable\n    const myList = localStorage.getItem(\"@movieguide\");\n\n    // take the myList variable, convert it to an array (JSON.parse because it originaly is a string) and saves it to a variable named savedMovies. If the myList variable doesnt exist, it saves an empty array to savedMovies variable\n    let savedMovies = JSON.parse(myList) || [];\n\n    // create a variable hasMovie. savedMovies.some will return true if savedMovie.id === movie.id\n    const hasMovie = savedMovies.some((savedMovie) => savedMovie.id === movie.id)\n\n    if(hasMovie) {\n      return;\n    }\n\n    savedMovies.push(movie);\n    localStorage.setItem(\"@movieguide\", JSON.stringify(savedMovies));\n\n  }\n\n  if(error) {\n    return(\n      <Error/>\n    )\n  }\n\n  if(loading) {\n    return(\n    <div className=\"loading\">\n      <h1>Loading...</h1>\n    </div>\n    )\n  }\n\n  return(\n    <div className=\"movie-info\">\n      <h1>{movie.title}</h1>\n      <img src={`http://image.tmdb.org//t/p/original/${movie.backdrop_path}`} alt={movie.title}/>\n      \n      <h3>Overview</h3>\n      <span>{movie.overview}</span>\n      <strong>Vote Average: {movie.vote_average} / 10</strong>\n\n      <div className=\"area-buttons\">\n        <button onClick={saveMovie}>Save</button>\n        <button>\n          {/* target=_blank for open the link in another tab and rel=external to inform broser engines that this is an external link*/}\n          <a target=\"_blank\" rel=\"external\" href={`http://youtube.com/results?search_query=${movie.title} Trailer`}>\n            Trailer\n          </a>\n        </button>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}