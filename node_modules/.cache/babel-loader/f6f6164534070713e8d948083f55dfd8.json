{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Banner.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport Search from './Search';\nimport './banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function loadMovies() {\n      const response = await api.get(`movie/popular`, {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: 1\n        }\n      }).then(response => {\n        setMovies(response.data.results);\n      });\n    }\n\n    loadMovies();\n  }, []);\n  const images = [];\n  movies.map(movie => {\n    images.push(movie.backdrop_path);\n  }); //randomize the image in banner\n\n  if (images.length !== 0) {\n    let randomChange = document.getElementById('randomChange');\n    const imgCount = images.length;\n    let number = Math.floor(Math.random() * imgCount);\n\n    function imgDisp(num) {\n      randomChange.style.backgroundImage = `linear-gradient(to right, rgba(13, 28, 59, 0.7), rgb(66, 74, 184, 0.7)), url(http://image.tmdb.org/t/p/original/${images[number]})`;\n    }\n\n    console.log(randomChange);\n    console.log(images[number]);\n    imgDisp();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner-container\",\n    id: \"randomChange\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Explore Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Banner, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["useState","useEffect","api","Search","Banner","movies","setMovies","loadMovies","response","get","params","api_key","page","then","data","results","images","map","movie","push","backdrop_path","length","randomChange","document","getElementById","imgCount","number","Math","floor","random","imgDisp","num","style","backgroundImage","console","log"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Banner.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport Search from './Search';\nimport './banner.css'\n\nfunction Banner() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(()=> {\n    async function loadMovies(){\n      const response = await api.get(`movie/popular`, {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: 1,\n        }\n      })\n      .then((response) => {\n        setMovies(response.data.results);\n      })\n    }\n    \n    loadMovies();\n    \n  }, [])\n  \n  const images = [];\n\n  movies.map((movie) => {\n    images.push(movie.backdrop_path)\n  })\n\n\n  //randomize the image in banner\n  if(images.length !== 0){\n    let randomChange = document.getElementById('randomChange')\n    const imgCount = images.length;\n    let number = Math.floor(Math.random() * imgCount)\n    \n    function imgDisp(num) {\n      randomChange.style.backgroundImage = `linear-gradient(to right, rgba(13, 28, 59, 0.7), rgb(66, 74, 184, 0.7)), url(http://image.tmdb.org/t/p/original/${images[number]})`\n    }\n    console.log(randomChange)\n    console.log(images[number])\n\n    imgDisp()\n  }\n \n  return(\n    <div className='banner-container'  id='randomChange'>\n      <h2>Explore Now</h2>\n      <br/>\n      <Search />\n    </div>\n  )\n}\n\nexport default Banner;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAK;IACb,eAAeM,UAAf,GAA2B;MACzB,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAS,eAAT,EAAyB;QAC9CC,MAAM,EAAE;UACNC,OAAO,EAAE,kCADH;UAENC,IAAI,EAAE;QAFA;MADsC,CAAzB,EAMtBC,IANsB,CAMhBL,QAAD,IAAc;QAClBF,SAAS,CAACE,QAAQ,CAACM,IAAT,CAAcC,OAAf,CAAT;MACD,CARsB,CAAvB;IASD;;IAEDR,UAAU;EAEX,CAfQ,EAeN,EAfM,CAAT;EAiBA,MAAMS,MAAM,GAAG,EAAf;EAEAX,MAAM,CAACY,GAAP,CAAYC,KAAD,IAAW;IACpBF,MAAM,CAACG,IAAP,CAAYD,KAAK,CAACE,aAAlB;EACD,CAFD,EAtBgB,CA2BhB;;EACA,IAAGJ,MAAM,CAACK,MAAP,KAAkB,CAArB,EAAuB;IACrB,IAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB;IACA,MAAMC,QAAQ,GAAGT,MAAM,CAACK,MAAxB;IACA,IAAIK,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAA3B,CAAb;;IAEA,SAASK,OAAT,CAAiBC,GAAjB,EAAsB;MACpBT,YAAY,CAACU,KAAb,CAAmBC,eAAnB,GAAsC,mHAAkHjB,MAAM,CAACU,MAAD,CAAS,GAAvK;IACD;;IACDQ,OAAO,CAACC,GAAR,CAAYb,YAAZ;IACAY,OAAO,CAACC,GAAR,CAAYnB,MAAM,CAACU,MAAD,CAAlB;IAEAI,OAAO;EACR;;EAED,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAmC,EAAE,EAAC,cAAtC;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAjDQ1B,M;;KAAAA,M;AAmDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}