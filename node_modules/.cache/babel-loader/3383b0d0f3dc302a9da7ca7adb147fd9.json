{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport Slider from \"react-slick\";\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\nimport './upcoming.css'; // API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upcoming() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [imageIndex, setImageIndex] = useState(0);\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let nextMonth = date.getMonth() + 2;\n  let day = date.getDate();\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  if (nextMonth < 10) {\n    nextMonth = `0${nextMonth}`;\n  }\n\n  if (day < 10) {\n    day = `0${day}`;\n  }\n\n  const today = `${year}-${month}-${day}`;\n  const releaseLimit = `${year}-${nextMonth}-${day}`;\n\n  const NextArrow = _ref => {\n    let {\n      onClick\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow next\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(BsChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n\n  const PrevArrow = _ref2 => {\n    let {\n      onClick\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow prev\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(BsChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n\n  const settings = {\n    infinite: true,\n    lazyLoad: true,\n    speed: 300,\n    slidesToShow: 3,\n    centerMode: true,\n    centerPadding: 0,\n    nextArrow: /*#__PURE__*/_jsxDEV(NextArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this),\n    prevArrow: /*#__PURE__*/_jsxDEV(PrevArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this),\n    beforeChange: (current, next) => setImageIndex(next)\n  };\n  useEffect(() => {\n    async function loadMovies() {\n      const response = await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page\n        }\n      }); //fetch 5 pages of data\n\n      if (page !== response.data.total_pages && page < 5) {\n        let sumPage = page + 1;\n        setPage(sumPage);\n      }\n\n      setMovies(prev => [...prev, ...response.data.results]);\n    }\n\n    loadMovies();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upcoming-list\",\n    children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: movies.map((movie, index) => {\n        if (movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: index === imageIndex ? \"slide activeSlide\" : \"slide\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://image.tmdb.org//t/p/original/${movie.poster_path}`,\n                alt: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upcoming, \"878kZQonRQSNWe7yOHr7XTNwDOc=\");\n\n_c = Upcoming;\nexport default Upcoming; // return(\n//   <div className=\"container\">\n//     <div className=\"header-container\">\n//       <h2>Upcoming Movies</h2>\n//     </div>\n//     <div>\n//       <div className=\"movies-list\">\n//         {movies.map((movie) => {\n//           if(movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\"){\n//             return(\n//               <div key={movie.id}>\n//                 <Link to={`/movie/${movie.id}`}>\n//                   <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n//                 </Link>\n//                 <strong>{movie.title}</strong>\n//                 <strong>{movie.release_date}</strong>\n//               </div>\n//             )\n//           }\n//         })}\n//       </div>\n//     </div>\n//   </div>\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"Upcoming\");","map":{"version":3,"names":["useEffect","useState","Link","api","Slider","BsChevronRight","BsChevronLeft","Upcoming","movies","setMovies","page","setPage","imageIndex","setImageIndex","date","Date","year","getFullYear","month","getMonth","nextMonth","day","getDate","today","releaseLimit","NextArrow","onClick","PrevArrow","settings","infinite","lazyLoad","speed","slidesToShow","centerMode","centerPadding","nextArrow","prevArrow","beforeChange","current","next","loadMovies","response","get","params","api_key","data","total_pages","sumPage","prev","results","map","movie","index","release_date","original_language","id","poster_path","title"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport Slider from \"react-slick\";\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\"\n\nimport './upcoming.css';\n\n// API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nfunction Upcoming() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [imageIndex, setImageIndex] = useState(0);\n\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth()+1;\n  let nextMonth = date.getMonth()+2;\n  let day = date.getDate();\n\n  if(month < 10) {\n    month = `0${month}`;\n  }\n\n  if(nextMonth < 10) {\n    nextMonth = `0${nextMonth}`;\n  }\n\n  if(day < 10) {\n    day = `0${day}`\n  }\n\n  const today = `${year}-${month}-${day}`;\n  const releaseLimit = `${year}-${nextMonth}-${day}`;\n\n  const NextArrow = ({onClick}) => {\n    return (\n      <div className=\"arrow next\" onClick={onClick}>\n        <BsChevronRight />\n      </div>\n    )\n  }\n\n  const PrevArrow = ({onClick}) => {\n    return (\n      <div className=\"arrow prev\" onClick={onClick}>\n        <BsChevronLeft />\n      </div>\n    )\n  }\n  \n\n  const settings = {\n    infinite:true,\n    lazyLoad: true,\n    speed: 300,\n    slidesToShow: 3,\n    centerMode: true,\n    centerPadding: 0,\n    nextArrow: <NextArrow/>,\n    prevArrow: <PrevArrow/>,\n    beforeChange: (current, next) => setImageIndex(next),\n  }\n\n  useEffect(()=> {\n    async function loadMovies(){\n      const response = await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page,\n        }\n      })\n      \n      //fetch 5 pages of data\n      if (page !== response.data.total_pages && page < 5) {\n        let sumPage = page + 1;\n        setPage(sumPage);        \n      }\n\n      setMovies(prev => [...prev, ...response.data.results]);\n      \n    }\n\n    loadMovies();\n    \n  }, [page])\n\n  \n\n  return(\n    \n    \n    <div className=\"upcoming-list\">\n      <Slider {...settings}>\n      {movies.map((movie, index) => {\n        if(movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\"){\n          return(\n            <div key={movie.id} className={index === imageIndex ? \"slide activeSlide\" : \"slide\"}>\n              <Link to={`/movie/${movie.id}`}>\n                <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n              </Link>\n              {/* <strong>{movie.title}</strong>\n              <strong>{movie.release_date}</strong> */}\n            </div>\n          )\n        }\n      })}\n      </Slider>\n    </div>\n    \n    \n  );\n}\n\nexport default Upcoming;\n\n\n\n// return(\n//   <div className=\"container\">\n//     <div className=\"header-container\">\n//       <h2>Upcoming Movies</h2>\n//     </div>\n\n//     <div>\n//       <div className=\"movies-list\">\n//         {movies.map((movie) => {\n//           if(movie.release_date >= today && movie.release_date <= releaseLimit && movie.original_language === \"en\"){\n//             return(\n//               <div key={movie.id}>\n//                 <Link to={`/movie/${movie.id}`}>\n//                   <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n//                 </Link>\n//                 <strong>{movie.title}</strong>\n//                 <strong>{movie.release_date}</strong>\n//               </div>\n//             )\n//           }\n//         })}\n//       </div>\n//     </div>\n//   </div>\n// );"],"mappings":"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"},"metadata":{},"sourceType":"module"}