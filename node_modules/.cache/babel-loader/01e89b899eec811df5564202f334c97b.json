{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Movie/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Error from \"../Error\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../services/api\";\nimport './movie.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movie() {\n  _s();\n\n  const {\n    id\n  } = useParams(); // const [error, setError] = useState(false);\n  // const [movie, setMovie] = useState({});\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   async function loadMovie() {\n  //     await api.get(`movie/${id}`, {\n  //       params: {\n  //         api_key: '1f6b33fb81a101dccbcc1b538423c585'\n  //       }\n  //     })\n  //     .then((response) => {        \n  //       setMovie(response.data);\n  //       setLoading(false);\n  //     })\n  //     .catch(() => {        \n  //       setError(true);\n  //     })\n  //   }\n  //   loadMovie();\n  //   return () => {\n  //     console.log('component desassembled')\n  //   }\n  // }, [id]);\n  // function saveMovie() {\n  //   // take the list on localstorage and saves it on a variable\n  //   const myList = localStorage.getItem(\"@movieguide\");\n  //   // take the myList variable, convert it to an array (JSON.parse because it originaly is a string) and saves it to a variable named savedMovies. If the myList variable doesnt exist, it saves an empty array to savedMovies variable\n  //   let savedMovies = JSON.parse(myList) || [];\n  //   // create a variable hasMovie. savedMovies.some will return true if savedMovie.id === movie.id\n  //   const hasMovie = savedMovies.some((savedMovie) => savedMovie.id === movie.id)\n  //   if(hasMovie) {\n  //     toast.warn(\"This movie is already on your list.\")\n  //     return;\n  //   }\n  //   savedMovies.push(movie);\n  //   localStorage.setItem(\"@movieguide\", JSON.stringify(savedMovies));\n  // }\n  // if(error) {\n  //   return(\n  //     <Error/>\n  //   )\n  // }\n  // if(loading) {\n  //   return(\n  //   <div className=\"loading\">\n  //     <h1>Loading...</h1>\n  //   </div>\n  //   )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-info\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movie, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["useEffect","useState","useParams","Error","toast","api","Movie","id"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Movie/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Error from \"../Error\";\nimport { toast } from \"react-toastify\";\n\nimport api from \"../../services/api\";\n\nimport './movie.css'\n\nfunction Movie() {\n  const { id } = useParams();\n  // const [error, setError] = useState(false);\n  // const [movie, setMovie] = useState({});\n  // const [loading, setLoading] = useState(true);\n  \n  // useEffect(() => {\n  //   async function loadMovie() {\n  //     await api.get(`movie/${id}`, {\n  //       params: {\n  //         api_key: '1f6b33fb81a101dccbcc1b538423c585'\n  //       }\n  //     })\n  //     .then((response) => {        \n  //       setMovie(response.data);\n  //       setLoading(false);\n  //     })\n  //     .catch(() => {        \n  //       setError(true);\n  //     })\n  //   }\n\n  //   loadMovie();\n\n  //   return () => {\n  //     console.log('component desassembled')\n  //   }\n\n  // }, [id]);\n\n  // function saveMovie() {\n  //   // take the list on localstorage and saves it on a variable\n  //   const myList = localStorage.getItem(\"@movieguide\");\n\n  //   // take the myList variable, convert it to an array (JSON.parse because it originaly is a string) and saves it to a variable named savedMovies. If the myList variable doesnt exist, it saves an empty array to savedMovies variable\n  //   let savedMovies = JSON.parse(myList) || [];\n\n  //   // create a variable hasMovie. savedMovies.some will return true if savedMovie.id === movie.id\n  //   const hasMovie = savedMovies.some((savedMovie) => savedMovie.id === movie.id)\n\n  //   if(hasMovie) {\n  //     toast.warn(\"This movie is already on your list.\")\n  //     return;\n  //   }\n\n  //   savedMovies.push(movie);\n  //   localStorage.setItem(\"@movieguide\", JSON.stringify(savedMovies));\n\n  // }\n\n  // if(error) {\n  //   return(\n  //     <Error/>\n  //   )\n  // }\n\n  // if(loading) {\n  //   return(\n  //   <div className=\"loading\">\n  //     <h1>Loading...</h1>\n  //   </div>\n  //   )\n  // }\n\n  return(\n    <div className=\"movie-info\">\n      <h1>{id}</h1>\n      {/* <img src={`http://image.tmdb.org//t/p/original/${movie.backdrop_path}`} alt={movie.title}/>\n      \n      <h3>Overview</h3>\n      <span>{movie.overview}</span>\n      <strong>Vote Average: {movie.vote_average} / 10</strong>\n\n      <div className=\"area-buttons\">\n        <button onClick={saveMovie}>Save</button>\n        <button>\n          target=_blank for open the link in another tab and rel=external to inform broser engines that this is an external link\n          <a target=\"_blank\" rel=\"external\" href={`http://youtube.com/results?search_query=${movie.title} Trailer`}>\n            Trailer\n          </a>\n        </button>\n      </div> */}\n\n    </div>\n  );\n}\n\nexport default Movie;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,aAAP;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC;EAAF,IAASL,SAAS,EAAxB,CADe,CAEf;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE;MAAA,UAAKK;IAAL;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GArFQD,K;UACQJ,S;;;KADRI,K;AAuFT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}