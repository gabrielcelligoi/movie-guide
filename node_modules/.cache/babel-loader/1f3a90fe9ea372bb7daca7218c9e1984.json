{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport './popular.css'; // API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upcoming() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const date = new Date();\n  useEffect(() => {\n    async function loadMovies() {\n      const response = await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page\n        }\n      }); //fetch 5 pages of data\n\n      if (page !== response.data.total_pages && page < 5) {\n        let sumPage = page + 1;\n        setPage(sumPage);\n      }\n\n      setMovies(prev => [...prev, ...response.data.results]);\n    }\n\n    loadMovies();\n    alert(date);\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\",\n      children: movies.map(movie => {\n        if (movie.release_date >= \"2022-06-15\" && movie.release_date <= \"2022-07-15\" && movie.original_language === \"en\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://image.tmdb.org//t/p/original/${movie.poster_path}`,\n                alt: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: movie.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upcoming, \"RJfgfaDMBCj2ygCE2JGhMDwoMvE=\");\n\n_c = Upcoming;\nexport default Upcoming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upcoming\");","map":{"version":3,"names":["useEffect","useState","Link","api","Upcoming","movies","setMovies","page","setPage","date","Date","loadMovies","response","get","params","api_key","data","total_pages","sumPage","prev","results","alert","map","movie","release_date","original_language","id","poster_path","title"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/Home/Upcoming.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport './popular.css';\n\n// API URL: movie/now_playing?api_key=1f6b33fb81a101dccbcc1b538423c585\n\nfunction Upcoming() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const date = new Date();\n\n  useEffect(()=> {\n    async function loadMovies(){\n      const response = await api.get(\"movie/upcoming\", {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          page: page,\n        }\n      })\n      \n      //fetch 5 pages of data\n      if (page !== response.data.total_pages && page < 5) {\n        let sumPage = page + 1;\n        setPage(sumPage);        \n      }\n\n      setMovies(prev => [...prev, ...response.data.results]);\n      \n    }\n\n    loadMovies();\n    alert(date)\n\n  }, [page])\n\n \n\n  return(\n    <div className=\"container\">\n      <h2>Upcoming Movies</h2>\n      <div className=\"movies-list\">\n        {movies.map((movie) => {\n          if(movie.release_date >= \"2022-06-15\" && movie.release_date <= \"2022-07-15\" && movie.original_language === \"en\"){\n            return(\n              <div key={movie.id}>\n                <Link to={`/movie/${movie.id}`}>\n                  <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n                </Link>\n                <strong>{movie.title}</strong>\n                <strong>{movie.release_date}</strong>\n              </div>\n            )\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Upcoming;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,eAAP,C,CAEA;;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAMQ,IAAI,GAAG,IAAIC,IAAJ,EAAb;EAEAV,SAAS,CAAC,MAAK;IACb,eAAeW,UAAf,GAA2B;MACzB,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQ,gBAAR,EAA0B;QAC/CC,MAAM,EAAE;UACNC,OAAO,EAAE,kCADH;UAENR,IAAI,EAAEA;QAFA;MADuC,CAA1B,CAAvB,CADyB,CAQzB;;MACA,IAAIA,IAAI,KAAKK,QAAQ,CAACI,IAAT,CAAcC,WAAvB,IAAsCV,IAAI,GAAG,CAAjD,EAAoD;QAClD,IAAIW,OAAO,GAAGX,IAAI,GAAG,CAArB;QACAC,OAAO,CAACU,OAAD,CAAP;MACD;;MAEDZ,SAAS,CAACa,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU,GAAGP,QAAQ,CAACI,IAAT,CAAcI,OAA3B,CAAT,CAAT;IAED;;IAEDT,UAAU;IACVU,KAAK,CAACZ,IAAD,CAAL;EAED,CAtBQ,EAsBN,CAACF,IAAD,CAtBM,CAAT;EA0BA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,aAAf;MAAA,UACGF,MAAM,CAACiB,GAAP,CAAYC,KAAD,IAAW;QACrB,IAAGA,KAAK,CAACC,YAAN,IAAsB,YAAtB,IAAsCD,KAAK,CAACC,YAAN,IAAsB,YAA5D,IAA4ED,KAAK,CAACE,iBAAN,KAA4B,IAA3G,EAAgH;UAC9G,oBACE;YAAA,wBACE,QAAC,IAAD;cAAM,EAAE,EAAG,UAASF,KAAK,CAACG,EAAG,EAA7B;cAAA,uBACE;gBAAK,GAAG,EAAG,uCAAsCH,KAAK,CAACI,WAAY,EAAnE;gBAAsE,GAAG,EAAEJ,KAAK,CAACK;cAAjF;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAA,UAASL,KAAK,CAACK;YAAf;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAA,UAASL,KAAK,CAACC;YAAf;cAAA;cAAA;cAAA;YAAA,QALF;UAAA,GAAUD,KAAK,CAACG,EAAhB;YAAA;YAAA;YAAA;UAAA,QADF;QASD;MACF,CAZA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAnDQtB,Q;;KAAAA,Q;AAqDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}