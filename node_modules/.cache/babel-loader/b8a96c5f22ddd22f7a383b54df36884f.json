{"ast":null,"code":"var _jsxFileName = \"/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/SearchPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Searchpage() {\n  _s();\n\n  const {\n    searchstring\n  } = useParams();\n  const [searched, setSearched] = useState([]);\n  useEffect(() => {\n    async function loadSearch() {\n      const response = await api.get('search/multi', {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          query: searchstring\n        }\n      });\n      setSearched(response.data.results);\n    }\n\n    loadSearch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: searchstring\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searched.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://image.tmdb.org//t/p/original/${movie.poster_path}`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movies.indexOf(movie) + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.title ? movie.title : movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Searchpage, \"h/zk1eVPPELnZa7Uya70YB8uuVo=\", false, function () {\n  return [useParams];\n});\n\n_c = Searchpage;\nexport default Searchpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchpage\");","map":{"version":3,"names":["useEffect","useState","useParams","api","Searchpage","searchstring","searched","setSearched","loadSearch","response","get","params","api_key","query","data","results","map","movie","id","poster_path","title","movies","indexOf","name"],"sources":["/home/gabrielcelligoi/Udemy/01-react-native/movie-guide/movie-guide/src/pages/SearchPage/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nfunction Searchpage() {\n  const { searchstring } = useParams();\n  const [ searched, setSearched ] = useState([]);\n\n  useEffect(() => {\n    async function loadSearch(){\n      const response = await api.get('search/multi', {\n        params: {\n          api_key: \"1f6b33fb81a101dccbcc1b538423c585\",\n          query: searchstring,\n        }\n      })\n      setSearched(response.data.results);\n    }\n    loadSearch();\n  }, [])\n\n  return(\n    <div>\n      <h1>{searchstring}</h1>\n      <div>\n        {searched.map(movie => {\n          return(\n            <div key={movie.id}>\n                <Link to={`/movie/${movie.id}`}>\n                  <img src={`http://image.tmdb.org//t/p/original/${movie.poster_path}`} alt={movie.title}/>                \n                </Link>\n                <h2>{movies.indexOf(movie)+1}</h2>\n                <strong>{movie.title ? movie.title : movie.name}</strong>              \n              </div>\n          )\n        })}\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Searchpage;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAM;IAAEC;EAAF,IAAmBH,SAAS,EAAlC;EACA,MAAM,CAAEI,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,eAAeQ,UAAf,GAA2B;MACzB,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQ,cAAR,EAAwB;QAC7CC,MAAM,EAAE;UACNC,OAAO,EAAE,kCADH;UAENC,KAAK,EAAER;QAFD;MADqC,CAAxB,CAAvB;MAMAE,WAAW,CAACE,QAAQ,CAACK,IAAT,CAAcC,OAAf,CAAX;IACD;;IACDP,UAAU;EACX,CAXQ,EAWN,EAXM,CAAT;EAaA,oBACE;IAAA,wBACE;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UACGC,QAAQ,CAACU,GAAT,CAAaC,KAAK,IAAI;QACrB,oBACE;UAAA,wBACI,QAAC,IAAD;YAAM,EAAE,EAAG,UAASA,KAAK,CAACC,EAAG,EAA7B;YAAA,uBACE;cAAK,GAAG,EAAG,uCAAsCD,KAAK,CAACE,WAAY,EAAnE;cAAsE,GAAG,EAAEF,KAAK,CAACG;YAAjF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAA,UAAKC,MAAM,CAACC,OAAP,CAAeL,KAAf,IAAsB;UAA3B;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA,UAASA,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4BH,KAAK,CAACM;UAA3C;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA,GAAUN,KAAK,CAACC,EAAhB;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GApCQd,U;UACkBF,S;;;KADlBE,U;AAsCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}